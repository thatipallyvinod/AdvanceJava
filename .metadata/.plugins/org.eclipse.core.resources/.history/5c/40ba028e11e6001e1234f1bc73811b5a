package com.khasim.projects;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Properties;
import java.util.Random;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/sendOTP")
public class SendOTPServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String email = request.getParameter("email");
        int otpValue = generateOTP();

        // Send the OTP to the provided email
        boolean otpSent = sendOTP(email, otpValue);

        // Prepare the response
        response.setContentType("application/json");
        PrintWriter out = response.getWriter();
        out.print("{\"success\": " + otpSent + "}");
        out.flush();
    }

    // Method to generate a 6-digit OTP
    private int generateOTP() {
        Random random = new Random();
        return 100000 + random.nextInt(900000);
    }

    // Method to send OTP to the provided email address
    private boolean sendOTP(String email, int otpValue) {
        // Configure email properties
        Properties props = new Properties();
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.socketFactory.port", "465");
        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.port", "465");

        // Set up session with email authentication
        Session session = Session.getInstance(props, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication("your_email", "your_app_password");
            }
        });

        try {
            // Compose message
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress("your_email"));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(email));
            message.setSubject("Your OTP");
            message.setText("Your OTP is: " + otpValue);

            // Send message
            Transport.send(message);
            return true; // OTP sent successfully
        } catch (MessagingException e) {
            e.printStackTrace();
            return false; // Failed to send OTP
        }
    }
}
